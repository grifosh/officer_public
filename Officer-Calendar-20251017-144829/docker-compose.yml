version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    container_name: officer-postgres
    environment:
      POSTGRES_DB: officer
      POSTGRES_USER: officer
      POSTGRES_PASSWORD: officer_pwd
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U officer -d officer"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Officer Calendar приложение
  app:
    build: .
    container_name: officer-app
    environment:
      - DB_NAME=officer
      - DB_USER=officer
      - DB_PASSWORD=officer_pwd
      - DB_HOST=postgres
      - DB_PORT=5432
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5001
      - ENVIRONMENT=production
      - DEBUG=false
    ports:
      - "5001:5001"
    volumes:
      - ./logs:/app/logs
      - ./credentials.json:/app/credentials.json:ro
      - ./token.pickle:/app/token.pickle
      - ./microsoft_token.pickle:/app/microsoft_token.pickle
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/db-pool-status"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: officer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_data:
