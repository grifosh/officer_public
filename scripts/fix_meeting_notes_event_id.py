#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è event_id –≤ —Ç–∞–±–ª–∏—Ü–µ meeting_notes
"""

import psycopg2
from psycopg2.extras import RealDictCursor
import os
from datetime import datetime

def get_db_connection():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return psycopg2.connect(
        host=os.getenv('DB_HOST', 'localhost'),
        port=int(os.getenv('DB_PORT', '5432')),
        dbname=os.getenv('DB_NAME', 'officer'),
        user=os.getenv('DB_USER', 'grifosh'),
        password=os.getenv('DB_PASSWORD', '')
    )

def fix_meeting_notes_event_id():
    """–ò—Å–ø—Ä–∞–≤–∏—Ç—å event_id –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ —Å event_id = null"""
    conn = get_db_connection()
    cur = conn.cursor(cursor_factory=RealDictCursor)
    
    try:
        print("üîç –ü–æ–∏—Å–∫ –∑–∞–º–µ—Ç–æ–∫ —Å event_id = null...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
        cur.execute("SELECT id, note_text, event_id FROM meeting_notes ORDER BY id DESC LIMIT 10")
        all_notes = cur.fetchall()
        print("üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–º–µ—Ç–æ–∫:")
        for note in all_notes:
            print(f"  - ID: {note['id']}, event_id: {note['event_id']}, –¢–µ–∫—Å—Ç: {note['note_text'][:30]}...")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–ª–µ notes —Å–æ–±—ã—Ç–∏—è 681
        cur.execute("SELECT id, subject, notes FROM events WHERE id = 681")
        event_681 = cur.fetchone()
        print("üîç –°–æ–±—ã—Ç–∏–µ 681:")
        print(f"  - ID: {event_681['id']}")
        print(f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {event_681['subject']}")
        print(f"  - –ü–æ–ª–µ notes: '{event_681['notes']}'")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ 31 –∏ 32
        cur.execute("SELECT id, note_text, event_id FROM meeting_notes WHERE id IN (31, 32)")
        specific_notes = cur.fetchall()
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–º–µ—Ç–∫–∏ 31 –∏ 32:")
        for note in specific_notes:
            print(f"  - ID: {note['id']}, event_id: {note['event_id']}, –¢–µ–∫—Å—Ç: {note['note_text'][:50]}...")
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–º–µ—Ç–∫–∏ —Å event_id = null
        cur.execute("""
            SELECT id, note_text, created_at, event_id
            FROM meeting_notes 
            WHERE event_id IS NULL
            ORDER BY created_at ASC
        """)
        
        notes_with_null_event_id = cur.fetchall()
        
        if not notes_with_null_event_id:
            print("‚úÖ –ó–∞–º–µ—Ç–æ–∫ —Å event_id = null –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        print(f"üìù –ù–∞–π–¥–µ–Ω–æ {len(notes_with_null_event_id)} –∑–∞–º–µ—Ç–æ–∫ —Å event_id = null:")
        for note in notes_with_null_event_id:
            print(f"  - ID: {note['id']}, –¢–µ–∫—Å—Ç: {note['note_text'][:50]}..., –°–æ–∑–¥–∞–Ω–æ: {note['created_at']}")
        
        # –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–º–µ—Ç–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
        for note in notes_with_null_event_id:
            note_id = note['id']
            note_text = note['note_text']
            created_at = note['created_at']
            
            print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–º–µ—Ç–∫—É ID {note_id}: {note_text[:50]}...")
            
            # –ò—â–µ–º —Å–æ–±—ã—Ç–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤ —Ç–æ—Ç –∂–µ –¥–µ–Ω—å
            event_date = created_at.date()
            
            cur.execute("""
                SELECT id, subject, start_time, end_time
                FROM events 
                WHERE DATE(start_time) = %s
                ORDER BY start_time ASC
            """, (event_date,))
            
            events_same_day = cur.fetchall()
            
            if not events_same_day:
                print(f"  ‚ùå –°–æ–±—ã—Ç–∏—è –Ω–∞ –¥–∞—Ç—É {event_date} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                continue
            
            print(f"  üìÖ –ù–∞–π–¥–µ–Ω–æ {len(events_same_day)} —Å–æ–±—ã—Ç–∏–π –Ω–∞ –¥–∞—Ç—É {event_date}:")
            for event in events_same_day:
                print(f"    - ID: {event['id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {event['subject']}, –í—Ä–µ–º—è: {event['start_time']} - {event['end_time']}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–æ–±—ã—Ç–∏–µ, –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –Ω–µ–º—É
            if len(events_same_day) == 1:
                event_id = events_same_day[0]['id']
                cur.execute("""
                    UPDATE meeting_notes 
                    SET event_id = %s 
                    WHERE id = %s
                """, (event_id, note_id))
                
                print(f"  ‚úÖ –ó–∞–º–µ—Ç–∫–∞ {note_id} –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —Å–æ–±—ã—Ç–∏—é {event_id} ({events_same_day[0]['subject']})")
            else:
                # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π, –∏—â–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                print(f"  ü§î –ù–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏–π –Ω–∞–π–¥–µ–Ω–æ. –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–π –≤—ã–±–æ—Ä.")
                print(f"  üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ —Å–æ–±—ã—Ç–∏—é —Å –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
                for i, event in enumerate(events_same_day):
                    print(f"    {i+1}. ID: {event['id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {event['subject']}")
        
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print(f"\n‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        conn.rollback()
    finally:
        cur.close()
        conn.close()

if __name__ == "__main__":
    fix_meeting_notes_event_id()
