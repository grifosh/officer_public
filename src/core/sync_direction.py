#!/usr/bin/env python3
"""
–õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
"""

from datetime import datetime
from typing import Dict, Optional, Tuple
import logging

logger = logging.getLogger(__name__)

class SyncDirectionDetector:
    """–î–µ—Ç–µ–∫—Ç–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
    
    @staticmethod
    def determine_sync_direction(local_event: Dict, google_event: Dict) -> Tuple[str, str]:
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        
        Args:
            local_event: –°–æ–±—ã—Ç–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
            google_event: –°–æ–±—ã—Ç–∏–µ –∏–∑ Google Calendar
            
        Returns:
            Tuple[str, str]: (–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏—á–∏–Ω–∞)
            - –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 'local_to_google', 'google_to_local', 'conflict', 'no_change'
            - –ø—Ä–∏—á–∏–Ω–∞: –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
        """
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        local_updated = None
        google_updated = None
        last_google_sync = None
        
        if local_event:
            local_updated = SyncDirectionDetector._parse_timestamp(local_event.get('last_local_update'))
            last_google_sync = SyncDirectionDetector._parse_timestamp(local_event.get('last_google_sync'))
        
        if google_event:
            google_updated = SyncDirectionDetector._parse_timestamp(google_event.get('updated'))
        
        logger.debug(f"üîç –ê–Ω–∞–ª–∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è: {local_event.get('subject', 'Unknown') if local_event else 'Google Only'}")
        logger.debug(f"  üìÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {local_updated}")
        logger.debug(f"  üìÖ Google –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {google_updated}")
        logger.debug(f"  üìÖ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {last_google_sync}")
        
        # –°–ª—É—á–∞–π 1: –°–æ–±—ã—Ç–∏–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
        if not google_event:
            return 'local_to_google', '–°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ'
        
        # –°–ª—É—á–∞–π 2: –°–æ–±—ã—Ç–∏–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –≤ Google Calendar
        if not local_event:
            return 'google_to_local', '–°–æ–±—ã—Ç–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Google Calendar'
        
        # –°–ª—É—á–∞–π 3: –ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if not local_updated and not google_updated:
            return 'conflict', '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π'
        
        # –°–ª—É—á–∞–π 4: –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏–∑–≤–µ—Å—Ç–Ω–æ
        if not google_updated:
            return 'local_to_google', '–õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ, Google –≤—Ä–µ–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        
        # –°–ª—É—á–∞–π 5: –¢–æ–ª—å–∫–æ Google –≤—Ä–µ–º—è –∏–∑–≤–µ—Å—Ç–Ω–æ
        if not local_updated:
            return 'google_to_local', 'Google —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ, –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
        
        # –°–ª—É—á–∞–π 6: –û–±–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã - —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º
        time_diff = abs((local_updated - google_updated).total_seconds())
        
        # –ï—Å–ª–∏ –≤—Ä–µ–º–µ–Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (—Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã) - –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if time_diff < 1:
            return 'no_change', '–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç'
        
        # –ï—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–Ω–µ–µ 5 —Å–µ–∫—É–Ω–¥ - —Å—á–∏—Ç–∞–µ–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
        if time_diff < 5:
            return 'conflict', f'–û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Ä–∞–∑–Ω–∏—Ü–∞: {time_diff:.1f}—Å)'
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–æ–≤–µ–µ
        if local_updated > google_updated:
            return 'local_to_google', f'–õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–æ–≤–µ–µ –Ω–∞ {time_diff:.1f}—Å'
        else:
            return 'google_to_local', f'Google —Å–æ–±—ã—Ç–∏–µ –Ω–æ–≤–µ–µ –Ω–∞ {time_diff:.1f}—Å'
    
    @staticmethod
    def _parse_timestamp(timestamp_str: Optional[str]) -> Optional[datetime]:
        """–ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ datetime –æ–±—ä–µ–∫—Ç"""
        if not timestamp_str:
            return None
        
        # –ï—Å–ª–∏ —É–∂–µ datetime –æ–±—ä–µ–∫—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
        if isinstance(timestamp_str, datetime):
            return timestamp_str
        
        try:
            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
            formats = [
                '%Y-%m-%dT%H:%M:%S.%fZ',  # ISO —Å –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥–∞–º–∏ –∏ Z
                '%Y-%m-%dT%H:%M:%SZ',     # ISO –±–µ–∑ –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥ –∏ Z
                '%Y-%m-%dT%H:%M:%S.%f',   # ISO —Å –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥–∞–º–∏
                '%Y-%m-%dT%H:%M:%S',      # ISO –±–µ–∑ –º–∏–∫—Ä–æ—Å–µ–∫—É–Ω–¥
                '%Y-%m-%d %H:%M:%S.%f',   # PostgreSQL —Ñ–æ—Ä–º–∞—Ç
                '%Y-%m-%d %H:%M:%S',      # –ü—Ä–æ—Å—Ç–æ–π —Ñ–æ—Ä–º–∞—Ç
            ]
            
            for fmt in formats:
                try:
                    return datetime.strptime(timestamp_str, fmt)
                except ValueError:
                    continue
            
            # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ, –ø—Ä–æ–±—É–µ–º –ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ ISO
            return datetime.fromisoformat(timestamp_str.replace('Z', '+00:00'))
            
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—Ä–µ–º—è '{timestamp_str}': {e}")
            return None
    
    @staticmethod
    def get_sync_priority(local_event: Dict, google_event: Dict) -> str:
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ
        
        Returns:
            str: 'local', 'google', –∏–ª–∏ 'manual'
        """
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:
        # 1. –°–æ–±—ã—Ç–∏—è —Å –≤–∞–∂–Ω—ã–º–∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (notes, questions)
        local_has_important_data = bool(
            local_event.get('notes') or 
            local_event.get('actual_open_questions') or
            local_event.get('recording_url')
        )
        
        # 2. –°–æ–±—ã—Ç–∏—è —Å Google ID (—É–∂–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
        has_google_id = bool(local_event.get('google_event_id'))
        
        # 3. –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        local_updated = SyncDirectionDetector._parse_timestamp(local_event.get('last_local_update'))
        google_updated = SyncDirectionDetector._parse_timestamp(google_event.get('updated'))
        
        if local_has_important_data:
            return 'local'
        elif has_google_id and google_updated and local_updated and google_updated > local_updated:
            return 'google'
        else:
            return 'local'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    
    @staticmethod
    def log_sync_decision(event_subject: str, direction: str, reason: str, 
                         local_time: Optional[datetime] = None, 
                         google_time: Optional[datetime] = None):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
        
        logger.info(f"üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: {event_subject}")
        logger.info(f"   üìç –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {direction}")
        logger.info(f"   üí≠ –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        
        if local_time:
            logger.info(f"   üìÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {local_time.strftime('%H:%M:%S')}")
        if google_time:
            logger.info(f"   üìÖ Google –≤—Ä–µ–º—è: {google_time.strftime('%H:%M:%S')}")

def test_sync_direction():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–æ–≤–µ–µ
    local_event = {
        'subject': 'Test Event 1',
        'last_local_update': '2025-10-13T17:00:00',
        'last_google_sync': '2025-10-13T16:00:00',
        'notes': 'Important notes'
    }
    google_event = {
        'summary': 'Test Event 1',
        'updated': '2025-10-13T16:30:00'
    }
    
    direction, reason = SyncDirectionDetector.determine_sync_direction(local_event, google_event)
    print(f"‚úÖ –¢–µ—Å—Ç 1: {direction} - {reason}")
    
    # –¢–µ—Å—Ç 2: Google —Å–æ–±—ã—Ç–∏–µ –Ω–æ–≤–µ–µ
    local_event = {
        'subject': 'Test Event 2',
        'last_local_update': '2025-10-13T16:00:00',
        'last_google_sync': '2025-10-13T16:00:00'
    }
    google_event = {
        'summary': 'Test Event 2',
        'updated': '2025-10-13T17:00:00'
    }
    
    direction, reason = SyncDirectionDetector.determine_sync_direction(local_event, google_event)
    print(f"‚úÖ –¢–µ—Å—Ç 2: {direction} - {reason}")
    
    # –¢–µ—Å—Ç 3: –ö–æ–Ω—Ñ–ª–∏–∫—Ç
    local_event = {
        'subject': 'Test Event 3',
        'last_local_update': '2025-10-13T17:00:00',
        'last_google_sync': '2025-10-13T16:00:00'
    }
    google_event = {
        'summary': 'Test Event 3',
        'updated': '2025-10-13T17:00:02'
    }
    
    direction, reason = SyncDirectionDetector.determine_sync_direction(local_event, google_event)
    print(f"‚úÖ –¢–µ—Å—Ç 3: {direction} - {reason}")

if __name__ == "__main__":
    test_sync_direction()
